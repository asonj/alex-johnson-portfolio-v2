{"version":3,"sources":["webpack:///./node_modules/reading-time/index.js","webpack:///./src/components/PreviewCompatibleImage.js","webpack:///./node_modules/react-bootstrap/esm/divWithClassName.js","webpack:///./node_modules/react-bootstrap/esm/CardImg.js","webpack:///./node_modules/react-bootstrap/esm/Card.js","webpack:///./src/components/BlogRoll.js","webpack:///./src/pages/blog/index.js","webpack:///./node_modules/reading-time/lib/reading-time.js"],"names":["module","exports","PreviewCompatibleImage","imageInfo","alt","childImageSharp","image","className","style","loading","console","log","fluid","src","forwardRef","p","ref","createElement","CardImg","_ref","bsPrefix","variant","_ref$as","as","Component","props","prefix","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","text","border","body","children","cardContext","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","BlogRoll","posts","data","allMarkdownRemark","edges","Row","map","post","node","stats","readingTime","html","Col","xs","md","key","id","to","fields","slug","frontmatter","featuredimage","title","maxHeight","maxWidth","padding","date","excerpt","query","render","count","BlogIndexPage","Layout","backgroundImage","backgroundPosition","backgroundAttachment","height","display","lineHeight","justifyContent","alignItems","flexDirection","React","ansiWordBound","c","options","wordBound","i","words","start","end","length","wordsPerMinute","minutes","time","Math","ceil","toFixed"],"mappings":"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","file":"component---src-pages-blog-index-js-c15bafa98393791cfbd9.js","sourcesContent":["module.exports = require('./lib/reading-time');","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Img from \"gatsby-image\";\n\nconst PreviewCompatibleImage = ({ imageInfo }) => {\n  const { alt = \"\", childImageSharp, image, className = \"\", style = {}, loading = \"lazy\" } = imageInfo;\n  console.log(\"PREVIEW IMAGE\", image, childImageSharp);\n  if (!!image && !!image.childImageSharp) {\n    return <Img fluid={image.childImageSharp.fluid} alt={alt} className={className} loading={loading} style={style} />;\n  }\n\n  if (!!childImageSharp) {\n    return <Img fluid={childImageSharp.fluid} alt={alt} className={className} loading={loading} style={style} />;\n  }\n\n  if (!!image && typeof image === \"string\") return <img src={image} alt={alt} className={className} style={style} />;\n\n  return null;\n};\n\nPreviewCompatibleImage.propTypes = {\n  imageInfo: PropTypes.shape({\n    alt: PropTypes.string,\n    childImageSharp: PropTypes.object,\n    image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n    style: PropTypes.object,\n  }).isRequired,\n};\n\nexport default PreviewCompatibleImage;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return React.forwardRef(function (p, ref) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import React from \"react\";\nimport { Link, graphql, StaticQuery } from \"gatsby\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport PreviewCompatibleImage from \"./PreviewCompatibleImage\";\nimport readingTime from \"reading-time\";\n\nconst BlogRoll = (props) => {\n  const { data } = props;\n  const { edges: posts } = data.allMarkdownRemark;\n  return (\n    <Row>\n      {posts &&\n        posts.map(({ node: post }) => {\n          const { text: stats } = readingTime(post.html);\n          return (\n            <Col xs={12} md={6} key={post.id}>\n              <Link className=\"green no-link-style\" to={post.fields.slug}>\n                <Card>\n                  <Card.Title>\n                    <PreviewCompatibleImage\n                      imageInfo={{\n                        image: post.frontmatter.featuredimage,\n                        alt: `featured image thumbnail for post ${post.frontmatter.title}`,\n                        style: {\n                          maxHeight: \"200px\",\n                          maxWidth: \"auto\",\n                        },\n                      }}\n                    />\n                    <div style={{ padding: \"1.125rem 1.125rem 0 1.125rem\" }}>\n                      <h3 className=\"hover\">{post.frontmatter.title}</h3>\n\n                      <p className=\"gray pb-0\">\n                        {post.frontmatter.date}\n\n                        <span className=\"mx-2 gray\">·</span>\n\n                        {stats}\n                      </p>\n                    </div>\n                  </Card.Title>\n                  <Card.Body className=\"pt-0\">\n                    <p className=\"black\">\n                      {post.excerpt}\n                      <br />\n                      <br />\n                      <Link className=\"button\" to={post.fields.slug}>\n                        Keep Reading →\n                      </Link>\n                    </p>\n                  </Card.Body>\n                </Card>\n              </Link>\n            </Col>\n          );\n        })}\n    </Row>\n  );\n};\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query BlogRollQuery {\n        allMarkdownRemark(\n          sort: { order: DESC, fields: [frontmatter___date] }\n          filter: { frontmatter: { templateKey: { eq: \"blog-post\" } } }\n        ) {\n          edges {\n            node {\n              excerpt(pruneLength: 250)\n              id\n              html\n              fields {\n                slug\n              }\n              frontmatter {\n                title\n                templateKey\n                date(formatString: \"MMMM DD, YYYY\")\n                featuredpost\n                featuredimage {\n                  childImageSharp {\n                    fluid(maxWidth: 500, quality: 100) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data, count) => <BlogRoll data={data} count={count} />}\n  />\n);\n","import React from \"react\";\n\nimport Layout from \"../../components/Layout\";\nimport BlogRoll from \"../../components/BlogRoll\";\n\nexport default class BlogIndexPage extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <div\n          className=\"full-width-image margin-top-0\"\n          style={{\n            backgroundImage: `url(\"/img/header_pattern7.png\")`,\n            backgroundPosition: `center center`,\n            backgroundAttachment: `fixed`,\n            height: \"50vh\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              height: \"150px\",\n              lineHeight: \"1\",\n              justifyContent: \"space-around\",\n              alignItems: \"left\",\n              flexDirection: \"column\",\n            }}\n          >\n            <h1 className=\"title\">Blog</h1>\n          </div>\n        </div>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"content\">\n              <BlogRoll />\n            </div>\n          </div>\n        </section>\n      </Layout>\n    );\n  }\n}\n","/*!\n * reading-time\n * Copyright (c) Nicolas Gryman <ngryman@gmail.com>\n * MIT Licensed\n */\n'use strict';\n\nfunction ansiWordBound(c) {\n  return ' ' === c || '\\n' === c || '\\r' === c || '\\t' === c;\n}\n\nfunction readingTime(text, options) {\n  var words = 0,\n      start = 0,\n      end = text.length - 1,\n      wordBound,\n      i;\n  options = options || {}; // use default values if necessary\n\n  options.wordsPerMinute = options.wordsPerMinute || 200; // use provided function if available\n\n  wordBound = options.wordBound || ansiWordBound; // fetch bounds\n\n  while (wordBound(text[start])) {\n    start++;\n  }\n\n  while (wordBound(text[end])) {\n    end--;\n  } // calculate the number of words\n\n\n  for (i = start; i <= end;) {\n    for (; i <= end && !wordBound(text[i]); i++) {\n      ;\n    }\n\n    words++;\n\n    for (; i <= end && wordBound(text[i]); i++) {\n      ;\n    }\n  } // reading time stats\n\n\n  var minutes = words / options.wordsPerMinute;\n  var time = minutes * 60 * 1000;\n  var displayed = Math.ceil(minutes.toFixed(2));\n  return {\n    text: displayed + ' min read',\n    minutes: minutes,\n    time: time,\n    words: words\n  };\n}\n/**\n * Export\n */\n\n\nmodule.exports = readingTime;"],"sourceRoot":""}